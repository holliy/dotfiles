[core]
	editor = vim
	quotepath = false
[init]
	defaultBranch = main
[pull]
	ff = only
[merge]
	# conflictStyle = diff3
	conflictStyle = zdiff3 # 2.35~
[status]
	showUntrackedFiles = all
[diff]
	algorithm = histogram
	indentHeuristic = true
	colorMoved = plain
	mnemonicPrefix = true
[log]
	date = format:%Y-%m-%d %H:%M %z
	decorate = short
[branch]
	sort = -committerdate
[alias]
	partialclone = clone --filter=blob:none
	unstage = restore --staged
	amend = commit --amend
	commitadd = commit --amend --no-edit
	diffc = diff --cached
	diffs = diff --stat
	logline = log --oneline --graph
	s = status
	sa = status --ignored --untracked-files=normal
	detail = show --format=fuller --stat
	detailpatch = show --format=fuller
	listmodified = diff --name-only --relative --diff-filter=M
	liststaged = diff --cached --name-only --relative --diff-filter=AMR
	listadded = diff --cached --name-only --relative --diff-filter=A
	listuntracked = ls-files --others --exclude-standard
	pushf = push --force-with-lease --force-if-includes
	synonym = switch --no-track --create
	# show branch list command from bash-completions
	branches = !git for-each-ref --sort=-committerdate --format=\"%(refname:strip=2)\" --exclude=\"refs/heads/$(git current-branch)\" \"refs/heads/**\"
	remote-branches = for-each-ref --sort=-committerdate --format="%(refname:strip=2)" "refs/remotes/**"
	merged-branches = !git for-each-ref --sort=-committerdate --format=\"%(refname:strip=2)\" --merged=\"remotes/origin/HEAD\" --exclude=\"refs/heads/$(git current-branch)\" \"refs/heads/**\"
	prebase = pull --rebase
	edit = config --global --edit
	uncached = !cd ${GIT_PREFIX:-.} && git ls-files -v $(git rev-parse --show-toplevel) | grep -v ^H
	loglinetime = logline --format="%C(auto)%h%C(reset)\\ %ad%C(auto)%d%C(reset)\\ %s"
	fixup = commit --fixup
	current-branch = branch --show-current
	squash = rebase --autosquash
	continue = "!f(){ git $1 --continue; };f"
	abort = "!f(){ git $1 --abort; };f"
	unchange = !git restore . && git clean --force
# vi: noet ts=4 sw=4 ft=gitconfig:
